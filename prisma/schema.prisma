generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_POSTGRESQL")
}

model admin {
  id       String @id @unique @default(uuid())
  username String @unique
  password String
}

model founder {
  id        Int
  name      String?
  bio       String?
  linkedIn  String?
  startupId String
  website   String?
  startup   startup @relation(fields: [startupId], references: [id], onDelete: Cascade)

  @@id([id, startupId])
}

model job {
  id                 String               @id @unique
  companyName        String?
  title              String?
  startupId          String
  addSkill           Json
  category           String
  type               String?
  description        String?
  duration           String?
  salary             String?
  jobLocation        String?
  deadline           String?
  totalApplications  String?
  totalRequired      String?
  createdAt          String?
  approval           String?
  skillsRequired     String[]
  perks              String[]
  qualification      String[]
  responsibilities   String[]
  selectionProcess   String[]
  assignment         String[]
  photolink          String?
  startup            startup              @relation(fields: [startupId], references: [id], onDelete: Cascade)
  studentApplication studentApplication[]
}

model startup {
  id             String    @id @unique
  companyName    String?
  email          String    @unique
  otp            String?
  linkedIn       String?
  website        String?
  tracxn         String?
  cruchbase      String?
  sector         String?
  noOfEmployees  String?
  hrName         String?
  hrEmail        String?
  hrDesignation  String?
  aboutCompany   String?
  facebook       String?
  foundedDate    String?
  hrLinkedin     String?
  instagram      String?
  location       String?
  profileimglink String?
  twitter        String?
  youtube        String?
  founder        founder[]
  job            job[]
}

model student {
  id                 String               @id @unique
  name               String?
  imglink            String?
  email              String               @unique
  otp                String?
  course             String?
  department         String?
  year               String?
  cgpa               String?
  resumeLink         String?
  linkedIn           String?
  isVerified         Boolean              @default(true)
  resumeId           String?
  college            String?
  studentApplication studentApplication[]
}

model studentApplication {
  id                 String    @id @unique
  studentId          String
  jobId              String
  status             String    @default("Applied")
  whyShouldWeHireYou String?
  applied            DateTime? @default(now())
  job                job       @relation(fields: [jobId], references: [id], onDelete: Cascade)
  student            student   @relation(fields: [studentId], references: [id], onDelete: Cascade)

  @@unique([jobId, studentId])
}
